#!/usr/bin/env ruby

require 'antfarm'
require 'trollop'

COMMANDS  = ['help', 'init', 'list']
COMMANDS << Antfarm.plugins.keys
COMMANDS.flatten

parser = Trollop::Parser.new do
  version "ANTFARM #{Antfarm.version} - (c) #{Time.now.strftime('%Y')} Sandia National Laboratories"
  banner <<-EOF
ANTFARM is a passive network mapping tool capable of parsing data files generated by common network
administration tools, network equipment configuration files, etc. Designed for use when assessing
critical infrastructure control systems.

Usage:
  antfarm <globals> help <plugin>       # Display the application or plugin help message
  antfarm <globals> list                # List the available plugins
  antfarm <globals> init                # Initialize the database for the given environment
  antfarm <globals> <plugin> <options>  # Execute given plugin with given options

Where <globals> are:
  EOF

  opt :environment,
      "Environment to use for this instance of ANTFARM (defaults to 'antfarm')",
      :type => String
  opt :log_level,
      "Level to log ANTFARM messages (defaults to 'warn')",
      :type => String

  stop_on COMMANDS
end

options = Trollop::with_standard_exception_handling(parser) do
  parser.parse
end

command = ARGV.shift
command = 'help' if command.nil? or command.empty?

# Setting global parameters and processing application...

Antfarm::Initializer.run do |config|
  config.environment = options[:environment] if options[:environment]
  config.log_level   = options[:log_level]   if options[:log_level]
end

# Executing command...

case command
when 'help'
  if ARGV.empty?
    parser.educate
  else
    plugin = ARGV.shift
    if Antfarm.plugins.keys.include?(plugin)
      Antfarm.plugins[plugin].educate

      plugin = Antfarm.plugins[plugin]

      # TODO: write parser creator and options helper methods
      parser = Trollop::Parser.new do
        banner "#{plugin.name} - #{plugin.info[:desc]}\n\nOptions:"
        plugin.options.each do |option|
          opt option[:name].to_sym, option[:desc], :type => option[:type], :required => option[:required]
        end
      end

      parser.educate
    else
      puts "Unknown plugin '#{plugin}' given. Below is a list of known plugins.\n\n"

      # TODO: write helper method for listing plugins
      Antfarm.plugins.each do |k,v|
        puts "#{k} - #{v.info[:desc]}"
      end
    end
  end
when 'list'
  if Antfarm.plugins.empty?
    puts 'No plugins currently loaded.'
  else
    Antfarm.plugins.each do |k,v|
      puts "#{k} - #{v.info[:desc]}"
    end
  end
when 'init'
  require 'fileutils'

  puts "Updating database for #{Antfarm.env} environment!\n\n"

  FileUtils.rm_f(Antfarm::Helpers.db_file)
  FileUtils.rm_f(Antfarm::Helpers.log_file)

  load 'antfarm/schema.rb'
else
  if Antfarm.plugins.keys.include?(command)
    plugin = Antfarm.plugins[command]

    # TODO: only require if a default isn't set...
    options = Trollop::options do
      banner "#{plugin.name} - #{plugin.info[:desc]}\n\nOptions:"
      plugin.options.each do |option|
        opt option[:name].to_sym, option[:desc], :type => option[:type], :required => option[:required]
      end
    end

    puts options

    plugin.run(options)
  else
    puts "Invalid command '#{command}' given. See help message below for valid commands.\n\n"
    parser.educate
  end
end
